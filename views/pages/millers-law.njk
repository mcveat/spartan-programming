---
layout: page.njk
title: Spartan programming - Miller's law
---

<h1>Miller's law</h1>

{% original "seven-plus-minus-one-or-two-principle", "Seven plus minus one or two principle" %}
  <ul>
    <li>Title changed to <em>Miller's law</em></li>
    <li>Attributed paper by it's full name, <em>The Magical Number Seven, Plus or Minus Two: Some Limits on Our Capacity for Processing Information</em></li>
    <li>Attributed papers' author, <em>George A. Miller.</em></li>
  </ul>
{% endoriginal %}

<p>The "<em>seven plus/minus one or two principle</em>" predicates that any system that interacts with more than about seven (plus/minus one or two) other systems is hard to understand and therefore likely to collapse due to complexity. The principle traces back to a paper entitled "<a href="https://en.wikipedia.org/wiki/The_Magical_Number_Seven%2C_Plus_or_Minus_Two" target="_blank">The Magical Number Seven, Plus or Minus Two: Some Limits on Our Capacity for Processing Information</a>" by George A. Miller.</p>

<p>Complexity due to high fan out can be tackled by applying the Hierarchical organization rule, letting each software system decompose into seven plus or minus one or two subsystems. Still, the {%page "babylonian-power-principle", "Babylonian tower principle" %} sets a limit to the number of levels that can be effectively used in a such an organization. </p>
